import { DefaultError, QueryKey, QueryClient } from '@tanstack/query-core';
import { UseQueryResult, DefinedUseQueryResult } from './types.cjs';
import { UndefinedInitialDataOptions, DefinedInitialDataOptions } from './queryOptions.cjs';

declare function useQuery<TQueryFnData = unknown, TError = DefaultError, TData = TQueryFnData, TQueryKey extends QueryKey = QueryKey>(options: UndefinedInitialDataOptions<TQueryFnData, TError, TData, TQueryKey>, queryClient?: QueryClient): UseQueryResult<TData, TError>;
declare function useQuery<TQueryFnData = unknown, TError = DefaultError, TData = TQueryFnData, TQueryKey extends QueryKey = QueryKey>(options: DefinedInitialDataOptions<TQueryFnData, TError, TData, TQueryKey>, queryClient?: QueryClient): DefinedUseQueryResult<TData, TError>;

export { useQuery };
